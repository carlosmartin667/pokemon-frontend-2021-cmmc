{"version":3,"sources":["context/AuthContext.js","types/authTypes.js","logo.svg","routers/PublicRouter.jsx","helpers/DataLogin.js","pages/LoginScrenn.jsx","routers/AppRouter.jsx","routers/PrivateRouter.jsx","routers/LoginRouter.jsx","reducers/AutReducer.js","App.js","helpers/AppData.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","authTypes","login","logout","PublicRouter","auth","Component","component","rest","props","log","to","DataLogin","history","dispatch","useContext","useState","pokemonData","setpokemondata","fetchData","id","a","fetch","res","json","data","imgJuego","sprites","front_default","nombre","name","experiencia","base_experience","hp","stats","base_stat","ataque","defensa","especial","useEffect","min","max","ramdom","Math","floor","random","handleLogin","type","push","LoginScrenn","className","data-bs-ride","src","alt","width","height","style","maxWidth","loading","onClick","Detalles","lazy","Footer","Search","Navbar","Home","AppRouter","fallback","exact","path","PrivateRouter","LoginRouter","AuthReducer","state","action","App","useReducer","JSON","parse","localStorage","getItem","setItem","stringify","AppData","Provider","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e802ade3.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","export const authTypes = {\r\n    login: \"login\",\r\n    logout: \"logout\",\r\n  };\r\n  ","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nconst PublicRouter = ({ auth, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !auth.log ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRouter;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { authTypes } from \"../types/authTypes\";\r\n\r\nexport const DataLogin = (history) => {\r\n\r\n    const { dispatch } = useContext(AuthContext);\r\n\r\n    const handleLogin = () => {\r\n        dispatch({ type: authTypes.login });\r\n        history.push(\"/\");\r\n    };\r\n    const [pokemonData, setpokemondata] = useState({});\r\n\r\n    const getRandomInt = (min, max) => {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    };\r\n  \r\n    const fetchData = async (id) => {\r\n      try {\r\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n        const data = await res.json();\r\n\r\n        setpokemondata({\r\n            imgJuego: data.sprites.front_default,\r\n            nombre: data.name,\r\n            experiencia: data.base_experience,\r\n            hp: data.stats[0].base_stat,\r\n            ataque: data.stats[1].base_stat,\r\n            defensa: data.stats[2].base_stat,\r\n            especial: data.stats[3].base_stat,\r\n        });\r\n      } catch (error) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        const ramdom = getRandomInt(1, 152);\r\n        fetchData(ramdom);\r\n    }, []);\r\n\r\n    return {handleLogin, pokemonData};\r\n};","import React, { useState } from \"react\";\r\nimport { DataLogin } from \"../helpers/DataLogin\";\r\n\r\nconst LoginScrenn = ({ history }) => {\r\n  const { handleLogin, pokemonData } = DataLogin(history);\r\n  const { imgJuego, nombre, experiencia, hp, ataque, defensa, especial } =\r\n    pokemonData;\r\n  return (\r\n    <>\r\n      <div className=\"conatainer text-center\">\r\n        <div\r\n          id=\"carouselExampleIndicators\"\r\n          className=\"carousel slide\"\r\n          data-bs-ride=\"carousel\"\r\n        >\r\n          <div className=\"carousel-inner\">\r\n            <div className=\"carousel-item active\">\r\n              <img\r\n                src=\"https://phantom-marca.unidadeditorial.es/2a6bb9293b020d388e4c1b1d3e640f1a/resize/1320/f/jpg/assets/multimedia/imagenes/2021/02/28/16145196328904.jpg\"\r\n                className=\"d-block w-100\"\r\n                alt=\"...\"\r\n                width=\"500\"\r\n                height=\"400\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row justify-content-md-center \">\r\n        <div className=\"card mb-3  bg\" style={{ maxWidth: 540 }}>\r\n          <div className=\"row g-0 \">\r\n            <div className=\"col-md-4 mt-4\">\r\n              <img\r\n                loading=\"lazy\"\r\n                className=\"card-img-top\"\r\n                style={{ width: \"100%\" }}\r\n                src={imgJuego}\r\n                alt={nombre}\r\n                height=\"200\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <div className=\"card-body\">\r\n                <h3 >{nombre}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                  <li className=\"list-group-item\">ataque : {ataque}</li>\r\n                  <li className=\"list-group-item\">defensa : {defensa}</li>\r\n                  <li className=\"list-group-item\">especial : {especial}</li>\r\n                  <li className=\"list-group-item\">experiencia : {experiencia}</li>\r\n                  <li className=\"list-group-item\">hp : {hp}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleLogin}\r\n            className=\"btn btn-outline-primary my-3\"\r\n          >\r\n            ENTRAR\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScrenn;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst Detalles = lazy(() => import(\"../pages/Detalles\"));\r\nconst Footer = lazy(() => import(\"../components/layout/Footer\"));\r\nconst Search = lazy(() => import(\"../pages/Search\"));\r\nconst Navbar = lazy(() => import(\"../components/layout/Navbar\"));\r\nconst Home = lazy(() => import(\"../pages/Home\"));\r\n\r\nconst AppRouter = (props) => {\r\n  return (\r\n    <>\r\n      <Suspense fallback={<h1>..</h1>}>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/home\" component={Home} />\r\n          <Route exact path=\"/searchs\" component={Search} />\r\n          <Route exact path=\"/Detalles/:id\" component={Detalles} />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        <Footer />\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nAppRouter.propTypes = {};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nconst PrivateRouter = ({ auth, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        auth.log ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRouter;\r\n","import React, { useContext } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nimport PublicRouter from \"./PublicRouter\";\r\nimport LoginScrenn from \"../pages/LoginScrenn\";\r\nimport AppRouter from \"./AppRouter\";\r\nimport PrivateRouter from \"./PrivateRouter\";\r\n\r\n\r\nconst LoginRouter = (props) => {\r\n  const { log } = useContext(AuthContext);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n      <PublicRouter path=\"/login\" auth={log} component={LoginScrenn} />\r\n        <PrivateRouter path=\"/\" auth={log} component={AppRouter} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nLoginRouter.propTypes = {};\r\n\r\nexport default LoginRouter;\r\n","import { authTypes } from \"../types/authTypes\";\r\n\r\nexport const AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case authTypes.login:\r\n      return { log: true };\r\n    case authTypes.logout:\r\n      return { log: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LoginRouter from './routers/LoginRouter';\nimport { AppData } from './helpers/AppData';\nimport { AuthContext } from './context/AuthContext';\n\nfunction App() {\n  const [log, dispatch] = AppData();\n  return (\n    \n    <AuthContext.Provider value={{ log, dispatch }}>\n      <LoginRouter />\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { useEffect, useReducer } from \"react\";\r\nimport { AuthReducer } from \"../reducers/AutReducer\";\r\n\r\nexport const AppData = () => {\r\n\r\n    const init = () => {\r\n        return JSON.parse(localStorage.getItem(\"log\")) || { log: false };\r\n    };\r\n\r\n    const [log, dispatch] = useReducer(AuthReducer, {}, init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"log\", JSON.stringify(log));\r\n    }, [log]);\r\n\r\n\r\n    return [log, dispatch];\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}